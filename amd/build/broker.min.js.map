{"version":3,"sources":["../src/broker.js"],"names":["define","$","mdlcfg","str","rooms","recordings","datasource","bigbluebuttonbn","init","bbb","wwwroot","sesskey","joinRedirect","joinUrl","window","open","recordingActionPerform","data","qs","action","recordingid","meetingid","recordingActionMetaQS","attempt","attempts","getJSON","url","done","status","recordingActionFailover","goalstate","recordingActionCompletion","recordingActionPerformedComplete","recordingActionPerformedValidate","fail","error","message","source","meta","encodeURIComponent","JSON","stringify","self","setTimeout","get_string","e","recordingCurrentState","published","secured","updated","endMeeting","bigbluebuttonbnid","location","reload","completionValidate","M","mod_bigbluebuttonbn","helpers","alertError"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @package   mod_bigbluebuttonbn\n * @copyright 2020 onwards, Blindside Networks Inc\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author    David Pesce  (david.pesce [at] exputo [dt] com)\n\n * @module mod_bigbluebuttonbn/broker\n*/\n\ndefine(['jquery', 'core/config', 'core/str', 'mod_bigbluebuttonbn/rooms', 'mod_bigbluebuttonbn/recordings'],\n    function ($, mdlcfg, str, rooms, recordings) {\n\n        /**\n         * Declare variables.\n         */\n        var datasource = null;\n        var bigbluebuttonbn = {};\n\n        var Broker = {\n            /**\n             * Initialise the broker code.\n             * @method init\n             * @param {object} bigbluebuttonbn\n             */\n            init: function (bbb) {\n                datasource = mdlcfg.wwwroot + \"/mod/bigbluebuttonbn/bbb_ajax.php?sesskey=\" + mdlcfg.sesskey + \"&\";\n                bigbluebuttonbn = bbb;\n            },\n\n            /**\n             * Open the bbb meeting URL.\n             * @param {string} joinUrl\n             */\n            joinRedirect: function (joinUrl) {\n                window.open(joinUrl);\n            },\n\n            recordingActionPerform: function (data) {\n                var qs = \"action=recording_\" + data.action + \"&id=\" + data.recordingid + \"&idx=\" + data.meetingid;\n                qs += this.recordingActionMetaQS(data);\n                data.attempt = 1;\n                if (typeof data.attempts === 'undefined') {\n                    data.attempts = 5;\n                }\n                $.getJSON({\n                    url: datasource + qs\n                })\n                    .done(function (data) {\n                        // Something went wrong.\n                        if (!data.status) {\n                            return recordings.recordingActionFailover(data);\n                        }\n                        // There is no need for verification.\n                        if (typeof data.goalstate === 'undefined') {\n                            return recordings.recordingActionCompletion(data);\n                        }\n                        // Use the current response for verification.\n                        if (data.attempts <= 1) {\n                            return recordings.recordingActionPerformedComplete(data);\n                        }\n                        // Iterate the verification.\n                        return recordings.recordingActionPerformedValidate(data);\n                    })\n                    .fail(function (error) {\n                        data.message = error.message;\n                        return recordings.recordingActionFailover(data);\n                    });\n            },\n\n            recordingActionMetaQS: function (data) {\n                var qs = '';\n                if (typeof data.source !== 'undefined') {\n                    var meta = {};\n                    meta[data.source] = encodeURIComponent(data.goalstate);\n                    qs += \"&meta=\" + JSON.stringify(meta);\n                }\n                return qs;\n            },\n\n            recordingActionPerformedValidate: function (data) {\n                var self = this;\n                var qs = \"action=recording_info&id=\" + data.recordingid + \"&idx=\" + data.meetingid;\n                qs += this.recordingActionMetaQS(data);\n                $.getJSON({\n                    url: datasource + qs\n                })\n                    .done(function (data) {\n                        // Evaluates if the current attempt has been completed.\n                        if (self.recordingActionPerformedComplete(data)) {\n                            // It has been completed, so stop the action.\n                            return;\n                        }\n                        // Evaluates if more attempts have to be performed.\n                        if (data.attempt < data.attempts) {\n                            data.attempt += 1;\n                            setTimeout(((function () {\n                                return function () {\n                                    self.recordingActionPerformedValidate(data);\n                                };\n                            })(this)), (data.attempt - 1) * 1000);\n                            return;\n                        }\n                        // No more attempts to perform, it stops with failing over.\n                        data.message = str.get_string('view_error_action_not_completed', 'bigbluebuttonbn');\n                        recordings.recordingActionFailover(data);\n\n                    })\n                    .fail(function (error) {\n                        data.message = error.message;\n                        recordings.recordingActionFailover(data);\n                    });\n            },\n\n            recordingActionPerformedComplete: function (e, data) {\n                // Something went wrong.\n                if (typeof e.data[data.source] === 'undefined') {\n                    data.message = str.get_string('view_error_current_state_not_found', 'bigbluebuttonbn');\n                    recordings.recordingActionFailover(data);\n                    return true;\n                }\n                // Evaluates if the state is as expected.\n                if (e.data[data.source] === data.goalstate) {\n                    recordings.recordingActionCompletion(data);\n                    return true;\n                }\n                return false;\n            },\n\n            recordingCurrentState: function (action, data) {\n                if (action === 'publish' || action === 'unpublish') {\n                    return data.published;\n                }\n                if (action === 'delete') {\n                    return data.status;\n                }\n                if (action === 'protect' || action === 'unprotect') {\n                    return data.secured; // The broker responds with secured as protected is a reserverd word.\n                }\n                if (action === 'update') {\n                    return data.updated;\n                }\n                return null;\n            },\n\n            endMeeting: function () {\n                var qs = 'action=meeting_end&id=' + bigbluebuttonbn.meetingid;\n                qs += '&bigbluebuttonbn=' + bigbluebuttonbn.bigbluebuttonbnid;\n                $.getJSON({\n                    url: datasource + qs\n                })\n                    .done(function (error) {\n                        if (error.data.status) {\n                            rooms.endMeeting();\n                            location.reload();\n                        }\n                    });\n            },\n\n            completionValidate: function (qs) {\n                $.getJSON({\n                    url: this.datasource + qs\n                })\n                    .done(function (error) {\n                        if (error.data.status) {\n                            var message = str.get_string('completionvalidatestatetriggered', 'bigbluebuttonbn');\n                            M.mod_bigbluebuttonbn.helpers.alertError(message, 'info');\n                            return;\n                        }\n                    });\n            }\n        };\n\n        return Broker;\n    });"],"file":"broker.min.js"}