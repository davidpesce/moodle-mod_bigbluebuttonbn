{"version":3,"sources":["../src/broker.js"],"names":["define","$","MDLCFG","STR","ROOMS","datasource","bigbluebuttonbn","init","wwwroot","sesskey","joinRedirect","joinUrl","window","open","recordingActionPerform","data","qs","action","recordingid","meetingid","recordingActionMetaQS","attempt","attempts","getJSON","url","done","status","M","mod_bigbluebuttonbn","recordings","recordingActionFailover","goalstate","recordingActionCompletion","recordingActionPerformedComplete","recordingActionPerformedValidate","fail","error","message","source","meta","encodeURIComponent","JSON","stringify","setTimeout","get_string","e","recordingCurrentState","published","secured","updated","endMeeting","bigbluebuttonbnid","location","reload","completionValidate","helpers","alertError"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @package    mod_bigbluebuttonbn\n * @copyright 2020 onwards, Blindside Networks Inc\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author    David Pesce  (david.pesce [at] exputo [dt] com)\n\n * @module mod_bigbluebuttonbn/broker\n*/\n\ndefine(['jquery', 'core/config', 'core/str', 'mod_bigbluebuttonbn/rooms'], function ($, MDLCFG, STR, ROOMS) {\n\n    return {\n        datasource: null,\n        bigbluebuttonbn: {},\n\n        /**\n         * Initialise the broker code.\n         *\n         * @method init\n         * @param {object} bigbluebuttonbn\n         */\n        init: function (bigbluebuttonbn) {\n            this.datasource = MDLCFG.wwwroot + \"/mod/bigbluebuttonbn/bbb_ajax.php?sesskey=\" + MDLCFG.sesskey + \"&\";\n            this.bigbluebuttonbn = bigbluebuttonbn;\n        },\n\n        joinRedirect: function (joinUrl) {\n            window.open(joinUrl);\n        },\n\n        recordingActionPerform: function (data) {\n            var qs = \"action=recording_\" + data.action + \"&id=\" + data.recordingid + \"&idx=\" + data.meetingid;\n            qs += this.recordingActionMetaQS(data);\n            data.attempt = 1;\n            if (typeof data.attempts === 'undefined') {\n                data.attempts = 5;\n            }\n            $.getJSON({\n                url: this.datasource + qs\n            })\n                .done(function (data) {\n                    // Something went wrong.\n                    if (!data.status) {\n                        return M.mod_bigbluebuttonbn.recordings.recordingActionFailover(data);\n                    }\n                    // There is no need for verification.\n                    if (typeof data.goalstate === 'undefined') {\n                        return M.mod_bigbluebuttonbn.recordings.recordingActionCompletion(data);\n                    }\n                    // Use the current response for verification.\n                    if (data.attempts <= 1) {\n                        return M.mod_bigbluebuttonbn.recordings.recordingActionPerformedComplete(data);\n                    }\n                    // Iterate the verification.\n                    return M.mod_bigbluebuttonbn.recordings.recordingActionPerformedValidate(data);\n                })\n                .fail(function (error) {\n                    data.message = error.message;\n                    return M.mod_bigbluebuttonbn.recordings.recordingActionFailover(data);\n                });\n        },\n\n        recordingActionMetaQS: function (data) {\n            var qs = '';\n            if (typeof data.source !== 'undefined') {\n                var meta = {};\n                meta[data.source] = encodeURIComponent(data.goalstate);\n                qs += \"&meta=\" + JSON.stringify(meta);\n            }\n            return qs;\n        },\n\n        recordingActionPerformedValidate: function (data) {\n            var qs = \"action=recording_info&id=\" + data.recordingid + \"&idx=\" + data.meetingid;\n            qs += this.recordingActionMetaQS(data);\n            $.getJSON({\n                url: this.datasource + qs\n            })\n                .done(function (data) {\n                    // Evaluates if the current attempt has been completed.\n                    if (this.recordingActionPerformedComplete(data)) {\n                        // It has been completed, so stop the action.\n                        return;\n                    }\n                    // Evaluates if more attempts have to be performed.\n                    if (data.attempt < data.attempts) {\n                        data.attempt += 1;\n                        setTimeout(((function () {\n                            return function () {\n                                this.recordingActionPerformedValidate(data);\n                            };\n                        })(this)), (data.attempt - 1) * 1000);\n                        return;\n                    }\n                    // No more attempts to perform, it stops with failing over.\n                    data.message = STR.get_string('view_error_action_not_completed', 'bigbluebuttonbn');\n                    M.mod_bigbluebuttonbn.recordings.recordingActionFailover(data);\n\n                })\n                .fail(function (error) {\n                    data.message = error.message;\n                    M.mod_bigbluebuttonbn.recordings.recordingActionFailover(data);\n                });\n        },\n\n        recordingActionPerformedComplete: function (e, data) {\n            // Something went wrong.\n            if (typeof e.data[data.source] === 'undefined') {\n                data.message = STR.get_string('view_error_current_state_not_found', 'bigbluebuttonbn');\n                M.mod_bigbluebuttonbn.recordings.recordingActionFailover(data);\n                return true;\n            }\n            // Evaluates if the state is as expected.\n            if (e.data[data.source] === data.goalstate) {\n                M.mod_bigbluebuttonbn.recordings.recordingActionCompletion(data);\n                return true;\n            }\n            return false;\n        },\n\n        recordingCurrentState: function (action, data) {\n            if (action === 'publish' || action === 'unpublish') {\n                return data.published;\n            }\n            if (action === 'delete') {\n                return data.status;\n            }\n            if (action === 'protect' || action === 'unprotect') {\n                return data.secured; // The broker responds with secured as protected is a reserverd word.\n            }\n            if (action === 'update') {\n                return data.updated;\n            }\n            return null;\n        },\n\n        endMeeting: function () {\n            var qs = 'action=meeting_end&id=' + this.bigbluebuttonbn.meetingid;\n            qs += '&bigbluebuttonbn=' + this.bigbluebuttonbn.bigbluebuttonbnid;\n            $.getJSON({\n                url: this.datasource + qs\n            })\n                .done(function (error) {\n                    if (error.data.status) {\n                        ROOMS.endMeeting();\n                        location.reload();\n                    }\n                });\n        },\n\n        completionValidate: function (qs) {\n            $.getJSON({\n                url: this.datasource + qs\n            })\n                .done(function (error) {\n                    if (error.data.status) {\n                        var message = STR.get_string('completionvalidatestatetriggered', 'bigbluebuttonbn');\n                        M.mod_bigbluebuttonbn.helpers.alertError(message, 'info');\n                        return;\n                    }\n                });\n        }\n    };\n});"],"file":"broker.min.js"}